{
    "LogicType.Activate": "1 se o dispositivo estiver ativado (geralmente significa em execução), caso contrário, 0",
    "LogicType.AirRelease": "O estado atual do sistema de libertação de ar, por exemplo AirRelease = 1 num traje rígido, ativa a libertação de ar",
    "LogicType.Charge": "A carga atual que o dispositivo possui",
    "LogicType.ClearMemory": "Quando definido a 1, limpa a memória do contador(ex. ExportCount). Voltará novamente a 0 quando acionado",
    "LogicType.CompletionRatio": "Quanto completa está a produção atual deste dispositivo, entre 0 e 1",
    "LogicType.ElevatorLevel": "Nível em que está o elevador",
    "LogicType.ElevatorSpeed": "Velocidade atual do elevador",
    "LogicType.Error": "1 se o dispositivo estiver em estado de erro, caso contrário, 0",
    "LogicType.ExportCount": "Quantos itens exportados desde a última ClearMemory",
    "LogicType.Filtration": "O estado atual do sistema de filtração, por exemplo Filtração = 1 num traje rígido, ativa a filtração",
    "LogicType.ForceWrite": "Força os dispositivos lógicos de escrita sobrescrever o valor",
    "LogicType.Harvest": "Executa a ação de colheita nas máquinas de plantas",
    "LogicType.Horizontal": "Definição horizontal do dispositivo",
    "LogicType.HorizontalRatio": "Definição da proporção horizontal do dispositivo",
    "LogicType.Idle": "Devolve 1 se o dispositivo estiver parado, caso contrário 0",
    "LogicType.ImportCount": "Quantos itens importados desde a última ClearMemory",
    "LogicType.Lock": "1 se o dispositivo estiver bloqueado, caso contrário 0, pode ser definido na maioria dos dispositivos e impede que o utilizador aceda aos valores",
    "LogicType.ManualResearchRequiredPod": "Define o tipo de pod a procurar ao destruir um pod.",
    "LogicType.Maximum": "Definição máxima do dispositivo",
    "LogicType.Mode": "Número inteiro representando o estado do modo, dispositivos diferentes terão outros estados disponíveis",
    "LogicType.On": "O estado atual do dispositivo, 0 para desativado, 1 para ativado",
    "LogicType.Open": "1 se o dispositivo estiver aberto, caso contrário, 0",
    "LogicType.Output": "A operação de saída de um dispositivo de classificação, tal como um empilhador ou um separador. Quando em modo lógico, o dispositivo irá executar uma repetição quando definido a zero ou superior, depois volta a -1 e aguarda mais instruções",
    "LogicType.Plant": "Executa a ação de plantação nas máquinas de plantas",
    "LogicType.PositionX": "A dimensão X da posição atual nas coordenadas do mundo",
    "LogicType.PositionY": "A dimensão Y da posição atual nas coordenadas do mundo",
    "LogicType.PositionZ": "A dimensão Z da posição atual nas coordenadas do mundo",
    "LogicType.Power": "Pode ser lido para saber se o dispositivo está corretamente alimentado ou não, definido através do sistema de energia, devolve 1 se estiver alimentado e 0 se não estiver",
    "LogicType.PowerActual": "Quanta energia o dispositivo ou rede está atualmente usando",
    "LogicType.PowerGeneration": "Devolve quanta energia está a ser gerada",
    "LogicType.PowerPotential": "Quanto potencial de energia o dispositivo ou a rede fornece",
    "LogicType.PowerRequired": "Energia solicitada do dispositivo/rede",
    "LogicType.PrefabHash": "A hash da estrutura",
    "LogicType.Pressure": "A leitura atual da pressão do dispositivo",
    "LogicType.PressureExternal": "Valor seguro da pressão externa, em KPa",
    "LogicType.PressureInternal": "Valor seguro da pressão interna, em KPa",
    "LogicType.PressureSetting": "A definição de pressão interna atual do objeto (ex. libertação de ar no traje rígido), em KPa",
    "LogicType.Quantity": "Quantidade total no dispositivo",
    "LogicType.Ratio": "Valor específico do contexto, dependendo do dispositivo, relação de 0 a 1",
    "LogicType.RatioCarbonDioxide": "A proporção de CO2 na atmosfera do dispositivo",
    "LogicType.RatioCarbonDioxideInput": "The ratio of Dióxido de Carbono in device's input network",
    "LogicType.RatioCarbonDioxideInput2": "The ratio of Dióxido de Carbono in device's Input2 network",
    "LogicType.RatioCarbonDioxideOutput": "The ratio of Dióxido de Carbono in device's Output network",
    "LogicType.RatioCarbonDioxideOutput2": "The ratio of Dióxido de Carbono in device's Output2 network",
    "LogicType.RatioNitrogen": "A proporção de nitrogénio na atmosfera do dispositivo",
    "LogicType.RatioNitrousOxide": "A proporção de óxido nitroso na atmosfera do dispositivo",
    "LogicType.RatioNitrousOxideInput": "The ratio of Óxido Nitroso in device's input network",
    "LogicType.RatioNitrousOxideInput2": "The ratio of Óxido Nitroso in device's Input2 network",
    "LogicType.RatioNitrousOxideOutput": "The ratio of Óxido Nitroso in device's Output network",
    "LogicType.RatioNitrousOxideOutput2": "The ratio of Óxido Nitroso in device's Output2 network",
    "LogicType.RatioOxygen": "A proporção de oxigénio na atmosfera do dispositivo",
    "LogicType.RatioPollutant": "A proporção de poluente na atmosfera do dispositivo",
    "LogicType.RatioVolatiles": "A proporção de voláteis na atmosfera do dispositivo",
    "LogicType.RatioWater": "A proporção de água na atmosfera do dispositivo",
    "LogicType.Reagents": "Número total de reagentes registados pelo dispositivo",
    "LogicType.RecipeHash": "Hash atual da receita que o dispositivo está definido a produzir",
    "LogicType.RequestHash": "Quando definido o identificador único, solicita um item do tipo definido do dispositivo",
    "LogicType.RequiredPower": "Energia consumida em repouso, não inclui necessariamente energia extra solicitada",
    "LogicType.Setting": "Uma definição variável que pode ser lida ou escrita, dependendo do dispositivo",
    "LogicType.SignalID": "Devolve o ID do contacto com sinal mais forte deste satélite",
    "LogicType.SignalStrength": "Devolve a força do sinal mais forte deste satélite",
    "LogicType.SolarAngle": "Ângulo solar do dispositivo",
    "LogicType.TargetX": "A posição X do alvo nas coordenadas do mundo",
    "LogicType.TargetY": "A posição Y do alvo nas coordenadas do mundo",
    "LogicType.TargetZ": "A posição Z do alvo nas coordenadas do mundo",
    "LogicType.Temperature": "A leitura atual da temperatura do dispositivo",
    "LogicType.TemperatureExternal": "A temperatura exterior do dispositivo, normalmente da atmosfera que o rodeia",
    "LogicType.TemperatureSetting": "A definição de temperatura interna atual do objeto (ex. A/C do traje rígido)",
    "LogicType.TotalMoles": "Devolve o total de moles do dispositivo",
    "LogicType.VelocityMagnitude": "A magnitude atual do vector de velocidade",
    "LogicType.VelocityRelativeX": "A velocidade atual X relativa ao vector frontal deste",
    "LogicType.VelocityRelativeY": "A velocidade atual Y relativa ao vector frontal deste",
    "LogicType.VelocityRelativeZ": "A velocidade atual Z relativa ao vector frontal deste",
    "LogicType.Vertical": "Definição vertical do dispositivo",
    "LogicType.VerticalRatio": "Definição da proporção vertical do dispositivo",
    "LogicType.Volume": "Devolve o volume atmosférico do dispositivo",
    "abs": "Register = o valor absoluto de a",
    "acos": "Devolve o total de moles do dispositivo",
    "alias": "Nomeia register ou referência ao dispositivo por nome, referência ao dispositivo afeta também o que mostra nos parafusos da base do CI.",
    "asin": "Devolve o volume atmosférico do dispositivo",
    "atan": "devolve o estado de saúde da planta no compartimento",
    "bap": "Salta para linha d se abs(a - b) <= max(c \\* max(abs(a), abs(b)), float.epsilon \\* 8)",
    "bapal": "Salta para linha c se a != b e guarda a próxima linha no ra",
    "bapz": "Salta para linha c se abs(a) <= float.epsilon \\* 8",
    "bapzal": "Salta para linha c se abs(a) <= float.epsilon \\* 8",
    "bdns": "Salta para linha a se dispositivo d não definido",
    "bdnsal": "Salta execução para linha a e guarda a próxima linha se dispositivo não definido",
    "bdse": "Salta para linha a se dispositivo d definido",
    "bdseal": "Salta execução para linha a e guarda a próxima linha se dispositivo definido",
    "beq": "Salta para linha c se a == b",
    "beqal": "Salta para linha c se a == b e guarda a próxima linha no ra",
    "beqz": "Salta para linha b se a == 0",
    "beqzal": "Salta para linha b se a == 0 e guarda a próxima linha no ra",
    "bge": "Salta para linha c se a >= b",
    "bgeal": "Salta para linha c se a >= b e guarda a próxima linha no ra",
    "bgez": "Salta para linha b se a >= 0",
    "bgezal": "Salta para linha b se a >= 0 e guarda a próxima linha no ra",
    "bgt": "Salta para linha c se a > b",
    "bgtal": "Salta para linha c se a > b e guarda a próxima linha no ra",
    "bgtz": "Salta para linha b se a > 0",
    "bgtzal": "Salta para linha b se a > 0 e guarda a próxima linha no ra",
    "ble": "Salta para linha c se a <= b",
    "bleal": "Salta para linha c se a <= b e guarda a próxima linha no ra",
    "blez": "Salta para linha b se a <= 0",
    "blezal": "Salta para linha b se a <= 0 e guarda a próxima linha no ra",
    "blt": "Salta para linha c se a < b",
    "bltal": "Salta para linha c se a < b e guarda a próxima linha no ra",
    "bltz": "Salta para linha b se a < 0",
    "bltzal": "Salta para linha b se a < 0 e guarda a próxima linha no ra",
    "bna": "Salta para linha d se abs(a - b) > max(c \\* max(abs(a), abs(b)), float.epsilon \\* 8)",
    "bnaal": "Salta para linha d se abs(a - b) <= max(c \\* max(abs(a), abs(b)), float.epsilon \\* 8) e guarda a próxima linha no ra",
    "bnaz": "Salta para linha c se abs(a) > float.epsilon \\* 8",
    "bnazal": "Salta para linha c se abs(a) > float.epsilon \\* 8",
    "bne": "Salta para linha c se a != b",
    "bneal": "Salta para linha c se a != b e guarda a próxima linha no ra",
    "bnez": "Salta para linha b se a != 0",
    "bnezal": "Salta para linha b se a != 0 e guarda a próxima linha no ra",
    "brap": "Salto relativo para linha d se abs(a - b) <= max(c \\* max(abs(a), abs(b)), float.epsilon \\* 8)",
    "brapz": "Salto relativo para linha c se abs(a) <= float.epsilon \\* 8",
    "brdns": "Salto relativo para linha a se dispositivo não definido",
    "brdse": "Salto relativo para linha a se dispositivo definido",
    "breq": "Salto relativo para linha c se a == b",
    "breqz": "Salto relativo para linha b se a == 0",
    "brge": "Salto relativo para linha c se a >= b",
    "brgez": "Salto relativo para linha b se a >= 0",
    "brgt": "Salto relativo para linha c se a > b",
    "brgtz": "Salto relativo para linha b se a > 0",
    "brle": "Salto relativo para linha c se a <= b",
    "brlez": "Salto relativo para linha b se a <= 0",
    "brlt": "Salto relativo para linha c se a < b",
    "brltz": "Salto relativo para linha b se a < 0",
    "brna": "Salto relativo para linha d se abs(a - b) > max(c \\* max(abs(a), abs(b)), float.epsilon \\* 8)",
    "brnaz": "Salto relativo para linha c se abs(a) > float.epsilon \\* 8",
    "brne": "Salto relativo para linha c se a != b",
    "brnez": "Salto relativo para linha b se a != 0",
    "ceil": "Register = menor valor inteiro maior que a",
    "cos": "Devolve o total de moles do dispositivo",
    "define": "Cria um rótulo que será substituído no programa todo pelo valor introduzido.",
    "floor": "Register = maior valor inteiro menor que a",
    "hcf": "Parar e falhar",
    "j": "Salta execução para linha a",
    "jal": "Salta execução para linha a e guarda a próxima linha no ra",
    "jr": "Salto relativo para linha a",
    "l": "Carrega var do dispositivo para register.",
    "ls": "Carrega var do compartimento do dispositivo para register.",
    "max": "Register = max de a ou b",
    "min": "Register = min de a ou b",
    "mod": "Register = a mod b (nota: NÃO a % b)",
    "move": "Register = valor fornecido ou valor do register.",
    "peek": "Register = valor no topo da stack",
    "pop": "Register = valor no topo da stack e decrementa o sp",
    "push": "Empurra o valor de a para a stack no sp e incrementa o sp",
    "rand": "Register = valor aleatório x em que 0 <= x < 1",
    "round": "Register = a arredondado ao próximo inteiro",
    "s": "Guarda valor do register na var do dispositivo.",
    "sap": "Register = 1 se abs(a - b) <= max(c \\* max(abs(a), abs(b)), float.epsilon \\* 8), senão 0",
    "sapz": "Register = 1 se |a| <= float.epsilon \\* 8, senão 0",
    "sb": "Guarda valor do register na var do dispositivo.",
    "sdns": "Register = 1 se dispositivo não definido, senão 0",
    "sdse": "Register = 1 se dispositivo definido, senão 0.",
    "select": "Register = b se a não zero, senão c",
    "seq": "Register = 1 se a == b, senão 0",
    "seqz": "Register = 1 se a == 0, senão 0",
    "sge": "Register = 1 se a >= b, senão 0",
    "sgez": "Register = 1 se a >= 0, senão 0",
    "sgt": "Register = 1 se a > b, senão 0",
    "sgtz": "Register = 1 se a > 0, senão 0",
    "sin": "Devolve o total de moles do dispositivo",
    "sle": "Register = 1 se a <= b, senão 0",
    "sleep": "Pausa a execução no CI por a segundos",
    "slez": "Register = 1 se a <= 0, senão 0",
    "slt": "Register = 1 se a < b, senão 0",
    "sltz": "Register = 1 se a < 0, senão 0",
    "sna": "Register = 1 se abs(a - b) > max(c \\* max(abs(a), abs(b)), float.epsilon \\* 8), senão 0",
    "snaz": "Register = 1 se |a| > float.epsilon, senão 0",
    "sne": "Register = 1 se a != b, senão 0",
    "snez": "Register = 1 se a != 0, senão 0",
    "sqrt": "Register = raiz quadrada de a",
    "tan": "Devolve o total de moles do dispositivo",
    "trunc": "Register = a sem a parte fracional",
    "yield": "Pausa a execução por 1 tick"
}
