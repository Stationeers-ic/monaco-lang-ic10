// This file is auto-generated by tools/updateData/index.ts
export default [
	{
		literal: "AirCon.Cold",
		value: 0,
		kind: 1,
	},
	{
		literal: "AirCon.Hot",
		value: 1,
		kind: 1,
	},
	{
		literal: "AirControl.Draught",
		value: 4,
		kind: 1,
	},
	{
		literal: "AirControl.None",
		value: 0,
		kind: 1,
	},
	{
		literal: "AirControl.Offline",
		value: 1,
		kind: 1,
	},
	{
		literal: "AirControl.Pressure",
		value: 2,
		kind: 1,
	},
	{
		literal: "Color.Black",
		value: 7,
		kind: 1,
	},
	{
		literal: "Color.Blue",
		value: 0,
		kind: 1,
	},
	{
		literal: "Color.Brown",
		value: 8,
		kind: 1,
	},
	{
		literal: "Color.Gray",
		value: 1,
		kind: 1,
	},
	{
		literal: "Color.Green",
		value: 2,
		kind: 1,
	},
	{
		literal: "Color.Khaki",
		value: 9,
		kind: 1,
	},
	{
		literal: "Color.Orange",
		value: 3,
		kind: 1,
	},
	{
		literal: "Color.Pink",
		value: 10,
		kind: 1,
	},
	{
		literal: "Color.Purple",
		value: 11,
		kind: 1,
	},
	{
		literal: "Color.Red",
		value: 4,
		kind: 1,
	},
	{
		literal: "Color.White",
		value: 6,
		kind: 1,
	},
	{
		literal: "Color.Yellow",
		value: 5,
		kind: 1,
	},
	{
		literal: "ConditionOperation.Equals",
		value: 0,
		kind: 1,
	},
	{
		literal: "ConditionOperation.Greater",
		value: 1,
		kind: 1,
	},
	{
		literal: "ConditionOperation.Less",
		value: 2,
		kind: 1,
	},
	{
		literal: "ConditionOperation.NotEquals",
		value: 3,
		kind: 1,
	},
	{
		literal: "ContactTier.Close",
		value: 0,
		kind: 1,
	},
	{
		literal: "ContactTier.Far",
		value: 2,
		kind: 1,
	},
	{
		literal: "ContactTier.Medium",
		value: 1,
		kind: 1,
	},
	{
		literal: "DaylightSensorMode.Default",
		value: 0,
		kind: 1,
	},
	{
		literal: "DaylightSensorMode.Horizontal",
		value: 1,
		kind: 1,
	},
	{
		literal: "DaylightSensorMode.Vertical",
		value: 2,
		kind: 1,
	},
	{
		literal: "DisplayMode.Celsius",
		value: 4,
		kind: 1,
	},
	{
		literal: "DisplayMode.Credits",
		value: 6,
		kind: 1,
	},
	{
		literal: "DisplayMode.Days",
		value: 9,
		kind: 1,
	},
	{
		literal: "DisplayMode.Default",
		value: 0,
		kind: 1,
	},
	{
		literal: "DisplayMode.Fahrenheit",
		value: 11,
		kind: 1,
	},
	{
		literal: "DisplayMode.Kelvin",
		value: 3,
		kind: 1,
	},
	{
		literal: "DisplayMode.Litres",
		value: 12,
		kind: 1,
	},
	{
		literal: "DisplayMode.Meters",
		value: 5,
		kind: 1,
	},
	{
		literal: "DisplayMode.Minutes",
		value: 8,
		kind: 1,
	},
	{
		literal: "DisplayMode.Mol",
		value: 13,
		kind: 1,
	},
	{
		literal: "DisplayMode.Pa",
		value: 14,
		kind: 1,
	},
	{
		literal: "DisplayMode.Percent",
		value: 1,
		kind: 1,
	},
	{
		literal: "DisplayMode.Power",
		value: 2,
		kind: 1,
	},
	{
		literal: "DisplayMode.Seconds",
		value: 7,
		kind: 1,
	},
	{
		literal: "DisplayMode.String",
		value: 10,
		kind: 1,
	},
	{
		literal: "ElevatorMode.Downward",
		value: 2,
		kind: 1,
	},
	{
		literal: "ElevatorMode.Stationary",
		value: 0,
		kind: 1,
	},
	{
		literal: "ElevatorMode.Upward",
		value: 1,
		kind: 1,
	},
	{
		literal: "EntityState.Alive",
		value: 0,
		kind: 1,
	},
	{
		literal: "EntityState.Dead",
		value: 1,
		kind: 1,
	},
	{
		literal: "EntityState.Decay",
		value: 3,
		kind: 1,
	},
	{
		literal: "EntityState.Unconscious",
		value: 2,
		kind: 1,
	},
	{
		literal: "GasType.Air",
		value: 3,
		kind: 1,
	},
	{
		literal: "GasType.CarbonDioxide",
		value: 4,
		kind: 1,
	},
	{
		literal: "GasType.Fuel",
		value: 9,
		kind: 1,
	},
	{
		literal: "GasType.Hydrogen",
		value: 16384,
		kind: 1,
	},
	{
		literal: "GasType.LiquidCarbonDioxide",
		value: 2048,
		kind: 1,
	},
	{
		literal: "GasType.LiquidHydrogen",
		value: 32768,
		kind: 1,
	},
	{
		literal: "GasType.LiquidNitrogen",
		value: 128,
		kind: 1,
	},
	{
		literal: "GasType.LiquidNitrousOxide",
		value: 8192,
		kind: 1,
	},
	{
		literal: "GasType.LiquidOxygen",
		value: 256,
		kind: 1,
	},
	{
		literal: "GasType.LiquidPollutant",
		value: 4096,
		kind: 1,
	},
	{
		literal: "GasType.LiquidVolatiles",
		value: 512,
		kind: 1,
	},
	{
		literal: "GasType.Nitrogen",
		value: 2,
		kind: 1,
	},
	{
		literal: "GasType.NitrousOxide",
		value: 64,
		kind: 1,
	},
	{
		literal: "GasType.Oxygen",
		value: 1,
		kind: 1,
	},
	{
		literal: "GasType.Pollutant",
		value: 16,
		kind: 1,
	},
	{
		literal: "GasType.PollutedWater",
		value: 65536,
		kind: 1,
	},
	{
		literal: "GasType.Steam",
		value: 1024,
		kind: 1,
	},
	{
		literal: "GasType.Undefined",
		value: 0,
		kind: 1,
	},
	{
		literal: "GasType.Volatiles",
		value: 8,
		kind: 1,
	},
	{
		literal: "GasType.Water",
		value: 32,
		kind: 1,
	},
	{
		literal: "HashType.GasLiquid",
		value: 1,
		kind: 1,
	},
	{
		literal: "HashType.Prefab",
		value: 0,
		kind: 1,
	},
	{
		literal: "PowerMode.Charged",
		value: 4,
		kind: 1,
	},
	{
		literal: "PowerMode.Charging",
		value: 3,
		kind: 1,
	},
	{
		literal: "PowerMode.Discharged",
		value: 1,
		kind: 1,
	},
	{
		literal: "PowerMode.Discharging",
		value: 2,
		kind: 1,
	},
	{
		literal: "PowerMode.Idle",
		value: 0,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.DeviceSetLock",
		value: 6,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.EjectAllReagents",
		value: 8,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.EjectReagent",
		value: 7,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.ExecuteRecipe",
		value: 2,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.JumpIfNextInvalid",
		value: 4,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.JumpToAddress",
		value: 5,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.MissingRecipeReagent",
		value: 9,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.None",
		value: 0,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.StackPointer",
		value: 1,
		kind: 1,
	},
	{
		literal: "PrinterInstruction.WaitUntilNextValid",
		value: 3,
		kind: 1,
	},
	{
		literal: "ReEntryProfile.High",
		value: 3,
		kind: 1,
	},
	{
		literal: "ReEntryProfile.Low",
		value: 1,
		kind: 1,
	},
	{
		literal: "ReEntryProfile.Max",
		value: 4,
		kind: 1,
	},
	{
		literal: "ReEntryProfile.Medium",
		value: 2,
		kind: 1,
	},
	{
		literal: "ReEntryProfile.None",
		value: 0,
		kind: 1,
	},
	{
		literal: "RobotMode.Follow",
		value: 1,
		kind: 1,
	},
	{
		literal: "RobotMode.MoveToTarget",
		value: 2,
		kind: 1,
	},
	{
		literal: "RobotMode.None",
		value: 0,
		kind: 1,
	},
	{
		literal: "RobotMode.PathToTarget",
		value: 5,
		kind: 1,
	},
	{
		literal: "RobotMode.Roam",
		value: 3,
		kind: 1,
	},
	{
		literal: "RobotMode.StorageFull",
		value: 6,
		kind: 1,
	},
	{
		literal: "RobotMode.Unload",
		value: 4,
		kind: 1,
	},
	{
		literal: "RocketMode.Chart",
		value: 5,
		kind: 1,
	},
	{
		literal: "RocketMode.Deploy",
		value: 6,
		kind: 1,
	},
	{
		literal: "RocketMode.Discover",
		value: 4,
		kind: 1,
	},
	{
		literal: "RocketMode.Invalid",
		value: 0,
		kind: 1,
	},
	{
		literal: "RocketMode.Mine",
		value: 2,
		kind: 1,
	},
	{
		literal: "RocketMode.None",
		value: 1,
		kind: 1,
	},
	{
		literal: "RocketMode.Survey",
		value: 3,
		kind: 1,
	},
	{
		literal: "SettingDisplayMode.Number",
		value: 0,
		kind: 1,
	},
	{
		literal: "SettingDisplayMode.String",
		value: 1,
		kind: 1,
	},
	{
		literal: "ShuttleType.Large",
		value: 5,
		kind: 1,
	},
	{
		literal: "ShuttleType.LargeGas",
		value: 6,
		kind: 1,
	},
	{
		literal: "ShuttleType.LargePlane",
		value: 8,
		kind: 1,
	},
	{
		literal: "ShuttleType.Medium",
		value: 3,
		kind: 1,
	},
	{
		literal: "ShuttleType.MediumGas",
		value: 4,
		kind: 1,
	},
	{
		literal: "ShuttleType.MediumPlane",
		value: 7,
		kind: 1,
	},
	{
		literal: "ShuttleType.None",
		value: 0,
		kind: 1,
	},
	{
		literal: "ShuttleType.Small",
		value: 1,
		kind: 1,
	},
	{
		literal: "ShuttleType.SmallGas",
		value: 2,
		kind: 1,
	},
	{
		literal: "SlotClass.AccessCard",
		value: 22,
		kind: 1,
	},
	{
		literal: "SlotClass.Appliance",
		value: 18,
		kind: 1,
	},
	{
		literal: "SlotClass.Back",
		value: 3,
		kind: 1,
	},
	{
		literal: "SlotClass.Battery",
		value: 14,
		kind: 1,
	},
	{
		literal: "SlotClass.Belt",
		value: 16,
		kind: 1,
	},
	{
		literal: "SlotClass.Blocked",
		value: 38,
		kind: 1,
	},
	{
		literal: "SlotClass.Bottle",
		value: 25,
		kind: 1,
	},
	{
		literal: "SlotClass.Cartridge",
		value: 21,
		kind: 1,
	},
	{
		literal: "SlotClass.Circuit",
		value: 24,
		kind: 1,
	},
	{
		literal: "SlotClass.Circuitboard",
		value: 7,
		kind: 1,
	},
	{
		literal: "SlotClass.Crate",
		value: 40,
		kind: 1,
	},
	{
		literal: "SlotClass.CreditCard",
		value: 28,
		kind: 1,
	},
	{
		literal: "SlotClass.DataDisk",
		value: 8,
		kind: 1,
	},
	{
		literal: "SlotClass.DirtCanister",
		value: 29,
		kind: 1,
	},
	{
		literal: "SlotClass.DrillHead",
		value: 35,
		kind: 1,
	},
	{
		literal: "SlotClass.Egg",
		value: 15,
		kind: 1,
	},
	{
		literal: "SlotClass.Entity",
		value: 13,
		kind: 1,
	},
	{
		literal: "SlotClass.Flare",
		value: 37,
		kind: 1,
	},
	{
		literal: "SlotClass.GasCanister",
		value: 5,
		kind: 1,
	},
	{
		literal: "SlotClass.GasFilter",
		value: 4,
		kind: 1,
	},
	{
		literal: "SlotClass.Glasses",
		value: 27,
		kind: 1,
	},
	{
		literal: "SlotClass.Helmet",
		value: 1,
		kind: 1,
	},
	{
		literal: "SlotClass.Ingot",
		value: 19,
		kind: 1,
	},
	{
		literal: "SlotClass.LiquidBottle",
		value: 32,
		kind: 1,
	},
	{
		literal: "SlotClass.LiquidCanister",
		value: 31,
		kind: 1,
	},
	{
		literal: "SlotClass.Magazine",
		value: 23,
		kind: 1,
	},
	{
		literal: "SlotClass.Motherboard",
		value: 6,
		kind: 1,
	},
	{
		literal: "SlotClass.None",
		value: 0,
		kind: 1,
	},
	{
		literal: "SlotClass.Ore",
		value: 10,
		kind: 1,
	},
	{
		literal: "SlotClass.Organ",
		value: 9,
		kind: 1,
	},
	{
		literal: "SlotClass.Plant",
		value: 11,
		kind: 1,
	},
	{
		literal: "SlotClass.Portables",
		value: 41,
		kind: 1,
	},
	{
		literal: "SlotClass.ProgrammableChip",
		value: 26,
		kind: 1,
	},
	{
		literal: "SlotClass.RocketPayload",
		value: 42,
		kind: 1,
	},
	{
		literal: "SlotClass.ScanningHead",
		value: 36,
		kind: 1,
	},
	{
		literal: "SlotClass.SensorProcessingUnit",
		value: 30,
		kind: 1,
	},
	{
		literal: "SlotClass.SoundCartridge",
		value: 34,
		kind: 1,
	},
	{
		literal: "SlotClass.Suit",
		value: 2,
		kind: 1,
	},
	{
		literal: "SlotClass.SuitMod",
		value: 39,
		kind: 1,
	},
	{
		literal: "SlotClass.Tool",
		value: 17,
		kind: 1,
	},
	{
		literal: "SlotClass.Torpedo",
		value: 20,
		kind: 1,
	},
	{
		literal: "SlotClass.Uniform",
		value: 12,
		kind: 1,
	},
	{
		literal: "SlotClass.Wreckage",
		value: 33,
		kind: 1,
	},
	{
		literal: "SorterInstruction.FilterPrefabHashEquals",
		value: 1,
		kind: 1,
	},
	{
		literal: "SorterInstruction.FilterPrefabHashNotEquals",
		value: 2,
		kind: 1,
	},
	{
		literal: "SorterInstruction.FilterQuantityCompare",
		value: 5,
		kind: 1,
	},
	{
		literal: "SorterInstruction.FilterSlotTypeCompare",
		value: 4,
		kind: 1,
	},
	{
		literal: "SorterInstruction.FilterSortingClassCompare",
		value: 3,
		kind: 1,
	},
	{
		literal: "SorterInstruction.LimitNextExecutionByCount",
		value: 6,
		kind: 1,
	},
	{
		literal: "SorterInstruction.None",
		value: 0,
		kind: 1,
	},
	{
		literal: "SortingClass.Appliances",
		value: 6,
		kind: 1,
	},
	{
		literal: "SortingClass.Atmospherics",
		value: 7,
		kind: 1,
	},
	{
		literal: "SortingClass.Clothing",
		value: 5,
		kind: 1,
	},
	{
		literal: "SortingClass.Default",
		value: 0,
		kind: 1,
	},
	{
		literal: "SortingClass.Food",
		value: 4,
		kind: 1,
	},
	{
		literal: "SortingClass.Ices",
		value: 10,
		kind: 1,
	},
	{
		literal: "SortingClass.Kits",
		value: 1,
		kind: 1,
	},
	{
		literal: "SortingClass.Ores",
		value: 9,
		kind: 1,
	},
	{
		literal: "SortingClass.Resources",
		value: 3,
		kind: 1,
	},
	{
		literal: "SortingClass.Storage",
		value: 8,
		kind: 1,
	},
	{
		literal: "SortingClass.Tools",
		value: 2,
		kind: 1,
	},
	{
		literal: "Sound.AirlockCycling",
		value: 22,
		kind: 1,
	},
	{
		literal: "Sound.Alarm1",
		value: 45,
		kind: 1,
	},
	{
		literal: "Sound.Alarm10",
		value: 12,
		kind: 1,
	},
	{
		literal: "Sound.Alarm11",
		value: 13,
		kind: 1,
	},
	{
		literal: "Sound.Alarm12",
		value: 14,
		kind: 1,
	},
	{
		literal: "Sound.Alarm2",
		value: 1,
		kind: 1,
	},
	{
		literal: "Sound.Alarm3",
		value: 2,
		kind: 1,
	},
	{
		literal: "Sound.Alarm4",
		value: 3,
		kind: 1,
	},
	{
		literal: "Sound.Alarm5",
		value: 4,
		kind: 1,
	},
	{
		literal: "Sound.Alarm6",
		value: 5,
		kind: 1,
	},
	{
		literal: "Sound.Alarm7",
		value: 6,
		kind: 1,
	},
	{
		literal: "Sound.Alarm8",
		value: 10,
		kind: 1,
	},
	{
		literal: "Sound.Alarm9",
		value: 11,
		kind: 1,
	},
	{
		literal: "Sound.Alert",
		value: 17,
		kind: 1,
	},
	{
		literal: "Sound.Danger",
		value: 15,
		kind: 1,
	},
	{
		literal: "Sound.Depressurising",
		value: 20,
		kind: 1,
	},
	{
		literal: "Sound.FireFireFire",
		value: 28,
		kind: 1,
	},
	{
		literal: "Sound.Five",
		value: 33,
		kind: 1,
	},
	{
		literal: "Sound.Floor",
		value: 34,
		kind: 1,
	},
	{
		literal: "Sound.Four",
		value: 32,
		kind: 1,
	},
	{
		literal: "Sound.HaltWhoGoesThere",
		value: 27,
		kind: 1,
	},
	{
		literal: "Sound.HighCarbonDioxide",
		value: 44,
		kind: 1,
	},
	{
		literal: "Sound.IntruderAlert",
		value: 19,
		kind: 1,
	},
	{
		literal: "Sound.LiftOff",
		value: 36,
		kind: 1,
	},
	{
		literal: "Sound.MalfunctionDetected",
		value: 26,
		kind: 1,
	},
	{
		literal: "Sound.Music1",
		value: 7,
		kind: 1,
	},
	{
		literal: "Sound.Music2",
		value: 8,
		kind: 1,
	},
	{
		literal: "Sound.Music3",
		value: 9,
		kind: 1,
	},
	{
		literal: "Sound.None",
		value: 0,
		kind: 1,
	},
	{
		literal: "Sound.One",
		value: 29,
		kind: 1,
	},
	{
		literal: "Sound.PollutantsDetected",
		value: 43,
		kind: 1,
	},
	{
		literal: "Sound.PowerLow",
		value: 23,
		kind: 1,
	},
	{
		literal: "Sound.PressureHigh",
		value: 39,
		kind: 1,
	},
	{
		literal: "Sound.PressureLow",
		value: 40,
		kind: 1,
	},
	{
		literal: "Sound.Pressurising",
		value: 21,
		kind: 1,
	},
	{
		literal: "Sound.RocketLaunching",
		value: 35,
		kind: 1,
	},
	{
		literal: "Sound.StormIncoming",
		value: 18,
		kind: 1,
	},
	{
		literal: "Sound.SystemFailure",
		value: 24,
		kind: 1,
	},
	{
		literal: "Sound.TemperatureHigh",
		value: 41,
		kind: 1,
	},
	{
		literal: "Sound.TemperatureLow",
		value: 42,
		kind: 1,
	},
	{
		literal: "Sound.Three",
		value: 31,
		kind: 1,
	},
	{
		literal: "Sound.TraderIncoming",
		value: 37,
		kind: 1,
	},
	{
		literal: "Sound.TraderLanded",
		value: 38,
		kind: 1,
	},
	{
		literal: "Sound.Two",
		value: 30,
		kind: 1,
	},
	{
		literal: "Sound.Warning",
		value: 16,
		kind: 1,
	},
	{
		literal: "Sound.Welcome",
		value: 25,
		kind: 1,
	},
	{
		literal: "TraderInstruction.FilterGasContains",
		value: 17,
		kind: 1,
	},
	{
		literal: "TraderInstruction.FilterGasNotContains",
		value: 18,
		kind: 1,
	},
	{
		literal: "TraderInstruction.FilterPrefabHashEquals",
		value: 13,
		kind: 1,
	},
	{
		literal: "TraderInstruction.FilterPrefabHashNotEquals",
		value: 14,
		kind: 1,
	},
	{
		literal: "TraderInstruction.FilterQuantityCompare",
		value: 16,
		kind: 1,
	},
	{
		literal: "TraderInstruction.FilterSortingClassCompare",
		value: 15,
		kind: 1,
	},
	{
		literal: "TraderInstruction.None",
		value: 0,
		kind: 1,
	},
	{
		literal: "TraderInstruction.StrongestContactIdHash",
		value: 2,
		kind: 1,
	},
	{
		literal: "TraderInstruction.StrongestContactMetaData",
		value: 3,
		kind: 1,
	},
	{
		literal: "TraderInstruction.StrongestContactSignalData",
		value: 4,
		kind: 1,
	},
	{
		literal: "TraderInstruction.TraderBuyGasData",
		value: 9,
		kind: 1,
	},
	{
		literal: "TraderInstruction.TraderBuyThingChildData",
		value: 8,
		kind: 1,
	},
	{
		literal: "TraderInstruction.TraderBuyThingData",
		value: 7,
		kind: 1,
	},
	{
		literal: "TraderInstruction.TraderSellGasData",
		value: 11,
		kind: 1,
	},
	{
		literal: "TraderInstruction.TraderSellThingChildData",
		value: 12,
		kind: 1,
	},
	{
		literal: "TraderInstruction.TraderSellThingData",
		value: 10,
		kind: 1,
	},
	{
		literal: "TraderInstruction.WriteTraderBuyData",
		value: 5,
		kind: 1,
	},
	{
		literal: "TraderInstruction.WriteTraderData",
		value: 1,
		kind: 1,
	},
	{
		literal: "TraderInstruction.WriteTraderSellData",
		value: 6,
		kind: 1,
	},
	{
		literal: "TransmitterMode.Active",
		value: 1,
		kind: 1,
	},
	{
		literal: "TransmitterMode.Passive",
		value: 0,
		kind: 1,
	},
	{
		literal: "Vent.Inward",
		value: 1,
		kind: 1,
	},
	{
		literal: "Vent.Outward",
		value: 0,
		kind: 1,
	},
	{
		literal: "deg2rad",
		description: "0,0174532923847437\nDegrees to radians conversion constant",
		value: 0.01745329238474369,
		kind: 0,
	},
	{
		literal: "epsilon",
		description: "A constant representing the smallest positive subnormal > 0",
		value: 5e-324,
		kind: 0,
	},
	{
		literal: "nan",
		description: "A constant representing 'not a number'. This constant technically provides a 'quiet' NaN, a signal NaN from some instructions will result in an exception and halt execution",
		value: NaN,
		kind: 0,
	},
	{
		literal: "ninf",
		description: "A constant representing a negative infinite value",
		value: -Infinity,
		kind: 0,
	},
	{
		literal: "pi",
		description: "3,14159265358979\nA constant representing ratio of the circumference of a circle to its diameter, provided in double precision",
		value: 3.141592653589793,
		kind: 0,
	},
	{
		literal: "pinf",
		description: "A constant representing a positive infinite value",
		value: Infinity,
		kind: 0,
	},
	{
		literal: "rad2deg",
		description: "57,2957801818848\nRadians to degrees conversion constant",
		value: 57.295780181884766,
		kind: 0,
	},
	{
		literal: "rgas",
		description: "8,31446261815324\nUniversal gas constant (J/(mol*K))",
		value: 8.31446261815324,
		kind: 0,
	},
	{
		literal: "tau",
		description: "6,28318530717959\nA constant representing the ratio of the circumference of a circle to its radius, provided in double precision",
		value: 6.283185307179586,
		kind: 0,
	},
] satisfies {
	literal: string
	description?: string
	value: number
	deprecated?: boolean
	kind: 0 | 1
}[] as {
	literal: string
	description?: string
	value: number
	deprecated?: boolean
	kind: 0 | 1
}[]
